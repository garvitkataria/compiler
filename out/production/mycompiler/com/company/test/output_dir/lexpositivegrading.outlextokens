[invalidchar, _, 1]
[id, abc, 1]
[intnum, 0, 2]
[intnum, 123, 2]
[eq, ==, 5]
[plus, +, 5]
[or, |, 5]
[openpar, (, 5]
[semi, ;, 5]
[if, if, 5]
[public, public, 5]
[read, read, 5]
[noteq, <>, 6]
[minus, -, 6]
[and, &, 6]
[closepar, ), 6]
[comma, ,, 6]
[then, then, 6]
[private, private, 6]
[write, write, 6]
[lt, <, 7]
[mult, *, 7]
[not, !, 7]
[opencubr, {, 7]
[dot, ., 7]
[else, else, 7]
[func, func, 7]
[return, return, 7]
[gt, >, 8]
[div, /, 8]
[closecubr, }, 8]
[colon, :, 8]
[integer, integer, 8]
[var, var, 8]
[self, self, 8]
[leq, <=, 9]
[assign, =, 9]
[opensqbr, [, 9]
[coloncolon, ::, 9]
[float, float, 9]
[struct, struct, 9]
[inherits, inherits, 9]
[geq, >=, 10]
[closesqbr, ], 10]
[arrow, ->, 10]
[void, void, 10]
[while, while, 10]
[let, let, 10]
[func, func, 11]
[impl, impl, 11]
[floatnum, 1.234e0, 15]
[intnum, 4, 15]
[intnum, 0, 17]
[intnum, 1, 18]
[intnum, 10, 19]
[intnum, 12, 20]
[intnum, 123, 21]
[intnum, 12345, 22]
[floatnum, 1.23, 24]
[floatnum, 12.34, 25]
[floatnum, 120.34e10, 26]
[floatnum, 12345.6789e-123, 27]
[id, abc, 29]
[id, abc1, 30]
[id, a1bc, 31]
[id, abc_1abc, 32]
[id, abc1_abc, 33]
[inlinecmt, // this is an inline comment, 35]
[blockcmt, /* this is a single line block comment */, 37]
[blockcmt, /* this is a 
multiple line
block comment 
*/, 39]
[blockcmt, /* this is an imbricated 
/* block comment
*/
*/, 44]
