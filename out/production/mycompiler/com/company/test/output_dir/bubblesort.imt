
start functionDef# main :void
start generateStatementBlockCode
varDeclare# integer arr[7]
assignStatement# arr[0] = 64
assignStatement# arr[1] = 34
assignStatement# arr[2] = 25
assignStatement# arr[3] = 12
assignStatement# arr[4] = 22
assignStatement# arr[5] = 11
assignStatement# arr[6] = 90
funcCall# printarray 7,arr
funcCall# bubbleSort 7,arr
funcCall# printarray 7,arr
end generateStatementBlockCode
end functionDef# main 

start functionDef# printArray integer size,integer arr:void
start generateStatementBlockCode
varDeclare# integer n
varDeclare# integer i
assignStatement# n = size
assignStatement# i = 0
start generateWhileStatementCode
start generateRelExprCode
condition# i < n
end generateRelExprCode 
start generateStatementBlockCode
writeStatement# write arr[i]
varDeclare# integer temp0
assignStatement# temp0 = i + 1
assignStatement# i = temp0
end generateStatementBlockCode
end generateWhileStatementCode
end generateStatementBlockCode
end functionDef# printArray integer size,integer arr

start functionDef# bubbleSort integer size,integer arr:void
start generateStatementBlockCode
varDeclare# integer n
varDeclare# integer i
varDeclare# integer j
varDeclare# integer temp
assignStatement# n = size
assignStatement# i = 0
assignStatement# j = 0
assignStatement# temp = 0
start generateWhileStatementCode
start generateRelExprCode
varDeclare# integer temp1
assignStatement# temp1 = n - 1
condition# i < temp1
end generateRelExprCode 
start generateStatementBlockCode
start generateWhileStatementCode
start generateRelExprCode
varDeclare# integer temp2
assignStatement# temp2 = n - i
varDeclare# integer temp3
assignStatement# temp3 = temp2 - 1
condition# j < temp3
end generateRelExprCode 
start generateStatementBlockCode
start generateIfStatementCode#
start generateRelExprCode
condition# arr[j] > arr
end generateRelExprCode 
start block 1
start generateStatementBlockCode
assignStatement# temp = arr[j]
assignStatement# arr[j] = arr
assignStatement# arr = temp
end generateStatementBlockCode
end block 1
start block 2
start generateStatementBlockCode
end generateStatementBlockCode
end block 2
end generateIfStatementCode#
varDeclare# integer temp4
assignStatement# temp4 = j + 1
assignStatement# j = temp4
end generateStatementBlockCode
end generateWhileStatementCode
varDeclare# integer temp5
assignStatement# temp5 = i + 1
assignStatement# i = temp5
end generateStatementBlockCode
end generateWhileStatementCode
end generateStatementBlockCode
end functionDef# bubbleSort integer size,integer arr
